#!/bin/bash

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# UPGRADE DEPENDENCIES
#=================================================
ynh_script_progression "Upgrading dependencies..."

ynh_nodejs_install

#=================================================
# STOP SYSTEMD SERVICE
#=================================================
ynh_script_progression "Stopping $app's systemd service..."

ynh_systemctl --service=$app --action="stop"

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression "Upgrading source files..."

ynh_setup_source --dest_dir="$install_dir" #--keep="config/config.js"

#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chmod -R o-rwx "$install_dir"
#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chown -R $app:$app "$install_dir"
#=================================================
# APPLY FOLDER GROUP RIGHTS FOR WWW-DATA
#=================================================

chgrp -R www-data $install_dir

#=================================================
# CREATE A SANDBOX DOMAIN
#=================================================

# if the main domain for the app is a root domain, we create a correct sandbox subdomain
if [[ $domain == *"."* ]]; then
	sandboxdomain=sandbox.$domain
fi
# if the main domain for the app is already a sub-domain, we create a correct sandbox domain
if [[ $domain == *"."*"."* ]]; then
	sandboxdomain=sandbox-$domain
fi
# if the main domain for the app is a .local root domain, we create a correct sandbox subdomain
if [[ $domain == *".local" ]]; then
	sandboxdomain=sandbox-$domain
fi

ynh_script_progression "Setting up sandobx domain: $sandboxdomain"

# We don't test that in CI
if ! ynh_in_ci_tests; then
	# If sandboxdomain doesn't exist, create it
	if ! yunohost domain list --output-as json | jq -r .domains[] | grep -q "^$sandboxdomain\$"; then
		yunohost domain add $sandboxdomain
		yunohost domain config set $sandboxdomain -a "mail_in=0&mail_out=0"
	fi
fi

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression "Upgrading NGINX web server configuration..."

ynh_config_add_nginx

ynh_config_add_systemd

yunohost service add $app --description="Zero Knowledge realtime collaborative editor" --log="/var/log/$app/$app.log"

#=================================================
# INSTALL CRYPTPAD
#=================================================
ynh_script_progression "Building $app... (this will take some time and resources!)"

pushd "$install_dir"

	ynh_hide_warnings ynh_exec_as_app node_load_PATH npm ci
	ynh_hide_warnings ynh_exec_as_app node_load_PATH npm run install:components
	ynh_hide_warnings ynh_exec_as_app node_load_PATH npm run build
	#./install-onlyoffice.sh
popd

#=================================================
# ADD UPGRADED CONFIG WITH SANDBOX
#=================================================
ynh_script_progression "Updating configuration..."

ynh_config_add --template="config.js" --destination="$install_dir/config/config.js"

#REMOVEME? Assuming the file is setup using ynh_config_add, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chmod 600 "$install_dir/config/config.js"
#REMOVEME? Assuming the file is setup using ynh_config_add, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chown $app "$install_dir/config/config.js"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression "Starting $app's systemd service..."

ynh_systemctl --service=$app --action="start" --log_path=systemd

#=================================================
# COPY NGINX CONF IN SANDBOX DOMAIN
#=================================================

# We don't test that in CI
if ! ynh_in_ci_tests; then
	if [ -n "$sandboxdomain" ]; then
		ynh_config_add --template="nginx.conf" --destination="/etc/nginx/conf.d/$sandboxdomain.d/$app.conf"
	fi
fi

# We authorize access to sandbox domain
# We don't test that in CI
if ! ynh_in_ci_tests; then
	ynh_permission_url --permission="main" --add_url=$sandboxdomain --auth_header=true
fi

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression "Upgrade of $app completed"
